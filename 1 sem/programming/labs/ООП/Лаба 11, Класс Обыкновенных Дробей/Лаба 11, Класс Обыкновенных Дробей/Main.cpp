#include <iostream>
#include "OrdFract.h" // Подключаем класс дробей
#include "FractExc.h" //Подключаем класс исключений
#include <ctime>

using namespace std;

int main() {
	try {
		setlocale(0, ""); // Подключаем русские символы
		OrdFract Arr[7];
		srand(time(NULL));
		int i(0);
		for (i; i < 2; i++) {
			Arr[i]=OrdFract(2+rand()%8,2+rand()%8);
		}
		for (i; i < 5; i++) Arr[i] = Arr[i - 1] + Arr[i - 2];
		for (i; i < 7; i++) Arr[i] = Arr[i - 3] - 2 * Arr[i - 5];
		for (i = 0; i < 7; i++) cout << Arr[i] << " ";
		OrdFract Max(Arr[0]);
		int Ind(0);
		for (i = 0; i < 7; i++) {
			if (Arr[i] > Max && Arr[i].GetID() % 2 ==0) {
				Max = Arr[i];
				Ind = i;
			}
		}
		cout << endl;
		for (i = 0; i < 7; i++) {
			cout << Arr[i] << " ID=" << Arr[i].GetID()<<endl;
		}
		//cout << "\nМаксимальная с четным идентификатором " << Max <<" с Индентификатором " << Max.GetID()+Ind-1;
		system("pause");
		//cout << "Введите первую дробь: ";// Вывод информации в консоль
		//cin >> F1;// Ввод 1 дроби с клавиатуры
		//cout << "Введите вторую дробь: ";// Вывод информации в консоль
		//cin >> F2;// Ввод 2 дроби с клавиатуры
		//cout << F1 << " и " << F2 << endl<<endl;// Проверка приведения к правильному виду
		////cout<<a.GetID()<<endl;
		////cout<<f.GetID()<<endl;// получение номера дроби (№ 6)
		////cout << g.GetID() << endl;// получение номера дроби (№ 5)
		//OrdFract q = F1, w = F2;
		//cout << "До " << q << " После " << ++q << endl;//Префиксный икремент
		//q = F1;
		//cout << "До " << q << " После " << q++ << endl;//Постфиксный икремент
		//q = F1;
		//cout << "До " << q << " После " << --q << endl; //Префиксный дикремент
		//q = F1;
		//cout << "До " << q << " После " << q-- << endl << endl;//Постфиксный дикремент
		//q = F1;

		//cout << q << " + " << w << " = " << q + w << endl; //Сложение двух дробей
		//q = F1, w = F2;
		//cout << q << " - " << w << " = " << q - w << endl;//Вычитание двух дробей
		//q = F1, w = F2;
		//cout << q << " * " << w << " = " << q * w << endl;//Умножение двух дробей
		//q = F1, w = F2;
		//cout << q << " / " << w << " = " << q / w << endl<<endl;//Деление двух дробей
		//q = F1, w = F2;

		//cout << q << "+" << 23 << " = " << q + 23 << endl;//Сложение дроби с числом
		//q = F1;
		//cout << q << " - " << 23 << " = " << q - 23 << endl;//Вычитание дроби и числа
		//q = F1;
		//cout << q<<" * "<<23<<" = "<<q * 23 << endl;//Умножение дроби и числа
		//q = F1;
		//cout << q << " / " << 23 << " = " << q / 23 << endl<<endl;//Деление дроби на число
		//q = F1;

		//cout << 23 << " + " << q << " = " << 23 + q << endl;//Сложение числа с дробью
		//q = F1;
		//cout << 23 << " - " << q << " = " << 23 - q << endl;//Вычитание числа и дроби
		//q = F1;
		//cout << 23 << " * " << q << " = " << 23 * q << endl;//Умножение числа и дроби
		//q = F1;
		//cout << 23 << " / " << F1 << " = " << 23 / q << endl << endl;//Деление числа на дробь
		//q = F1;

		//q += w; //Сложение исходной дроби с другой дробью и присваивание значения исходной дроби
		//cout << F1 << " += " << F2 << " = " << q << endl;
		//q = F1, w = F2;
		//q -= w; //Вычитание исходной дроби и другой дроби и присваивание значения исходной дроби
		//cout << F1 << " -= " << F2 << " = " << q << endl;
		//q = F1, w = F2;
		//q *= w; //Умножение исходной дроби и другой дроби и присваивание значения исходной дроби
		//cout << F1 << " *= " << F2 << " = " << q << endl;
		//q = F1, w = F2;
		//q /= w; //Деление исходной дроби и другой дроби и присваивание значения исходной дроби
		//cout << F1 << " /= " << F2 << " = " << q << endl<<endl;
		//q = F1, w = F2;

		//q += 23;//Сложение исходной дроби числом и присваивание значения исходной дроби
		//cout << F1 << " += " << 23 << " = " << q << endl;
		//q = F1;
		//q -= 23; //Вычитание исходной дроби и числа и присваивание значения исходной дроби
		//cout << F1 << " -= " << 23 << " = " << q << endl;
		//q = F1;
		//q *= 23; //Умножение исходной дроби и числа и присваивание значения исходной дроби
		//cout << F1 << " * " << 23 << " = " << q << endl;
		//q = F1;
		//q /= 23; //Деление исходной дроби и числа и присваивание значения исходной дроби
		//cout << F1 << " /= " << 23 << " = " << q << endl << endl;
		//q = F1, w = F2;

		//// Операторы сравнения
		//OrdFract r = F1;
		//if (q == r) cout << "Дроби " << q << " и " << r << " равны\n";
		//if (q != w) cout << "Дроби " << q << " и " << w << " не равны\n";
		//if (q > w) cout << "Дробь " << q << " больше " << w << endl;
		//if (q >= w) cout << "Дробь " << q << " больше либо равна" << w << endl;
		//if (q < w) cout << "Дробь " << q << " меньше " << w << endl;
		//if (q <= w) cout << "Дробь " << q << " меньше либо равна " << w << endl<<endl;

		////Операции с нулем
		//cout << q << " + " << 0 << " = " << q + 0<<endl;
		//cout << q << " - " << 0 << " = " << q - 0<<endl;
		//cout << q << " * " << 0 << " = " << q * 0<<endl;
		//cout << q << " / " << 0 << " = " << q / 0<<endl<<endl;
		//q = F1;
	}
	catch (FractExc& e) { // ловим исключение в свой класс ошибок
		cout << e.what() << endl; // выводим ошибку
	}
}